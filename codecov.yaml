# Codecov Configuration for PromptCraft-Hybrid
# See: https://docs.codecov.com/docs/codecov-yaml
# Validation: https://codecov.io/validate

codecov:
  # Token is provided via CODECOV_TOKEN environment variable in GitHub Actions
  ci:
    - github
  branch: main
  max_report_age: "24h"  # Increased for better historical coverage
  notify:
    after_n_builds: 2  # Wait for both Python versions to upload
    wait_for_ci: true   # Wait for CI to stabilize comparisons
  require_ci_to_pass: false  # Allow uploads even if CI hasn't completed
  # Handle missing base commits gracefully
  assume_all_flags: false  # Only process flags that are uploaded
  # Improve commit comparison
  disable_default_path_fixes: false
  strict_yaml_branch: main

coverage:
  precision: 2
  round: down
  range: 70...95

  status:
    project:
      default:
        target: 80%
        threshold: 5%
        if_not_found: success
        only_pulls: false
        # Remove flags to ensure this runs on all uploads
      unit:
        target: 85%
        threshold: 5%
        flags:
          - unit
        if_not_found: success
      integration:
        target: 75%
        threshold: 5%
        flags:
          - integration
        if_not_found: success
      auth:
        target: 80%
        threshold: 5%
        flags:
          - auth
        if_not_found: success
      performance:
        target: 70%
        threshold: 10%
        flags:
          - performance
        if_not_found: success
        only_pulls: false  # Run on all commits for performance tracking

    patch:
      default:
        target: 80%
        threshold: 5%
        if_not_found: success
        only_pulls: true
        # No specific flags - analyze all coverage changes

  ignore:
    - "tests/"
    - "scripts/"
    - "docs/"
    - "htmlcov/"
    - "*.html"
    - "*.js"
    - "*.css"
    - "*/__pycache__/"
    - "*/migrations/"
    - "*/vendor/"
    - "*/node_modules/"
    - "noxfile.py"
    - ".github/"
    - "docker/"
    - "*.yaml"
    - "*.yml"
    - "*.toml"
    - "*.cfg"
    - "*.ini"
    - "Dockerfile*"
    - ".env*"
    - "requirements*.txt"
    - "pyproject.toml"

# Component definitions for different parts of the codebase
component_management:
  individual_components:
    - component_id: core
      name: "Core Business Logic"
      paths:
        - src/core/
      flag_regexes:
        - unit
        - integration
        - combined

    - component_id: agents
      name: "Agent System"
      paths:
        - src/agents/
      flag_regexes:
        - unit
        - combined

    - component_id: auth
      name: "Authentication & Security"
      paths:
        - src/auth/
        - src/security/
      flag_regexes:
        - auth
        - security
        - combined

    - component_id: config
      name: "Configuration Management"
      paths:
        - src/config/
      flag_regexes:
        - unit
        - combined

    - component_id: utils
      name: "Utility Modules"
      paths:
        - src/utils/
      flag_regexes:
        - unit
        - combined

    - component_id: ui
      name: "User Interface"
      paths:
        - src/ui/
      flag_regexes:
        - integration
        - combined

    - component_id: api
      name: "API Layer"
      paths:
        - src/api/
      flag_regexes:
        - unit
        - integration
        - combined

    - component_id: mcp_integration
      name: "MCP Integration"
      paths:
        - src/mcp_integration/
      flag_regexes:
        - unit
        - integration
        - combined

    - component_id: ingestion
      name: "Knowledge Ingestion"
      paths:
        - src/ingestion/
      flag_regexes:
        - unit
        - combined

# Flag definitions for different test types - simplified for better consistency
flags:
  # Main flags aligned with test structure
  unit:
    paths:
      - src/core/
      - src/agents/
      - src/config/
      - src/utils/
      - src/mcp_integration/
      - src/ingestion/
      - src/api/
      - src/ui/  # Include UI for comprehensive unit coverage
    carryforward: true
    carryforward_mode: all

  auth:
    paths:
      - src/auth/
      - src/security/
    carryforward: true
    carryforward_mode: all

  integration:
    paths:
      - src/  # Full source coverage for integration tests
    carryforward: true
    carryforward_mode: all

  performance:
    paths:
      - src/core/
      - src/agents/
      - src/mcp_integration/
      - src/utils/
    carryforward: false  # Don't carry forward performance - always fresh

  # Combined general flag for unified reporting
  general:
    paths:
      - src/
    carryforward: true
    carryforward_mode: all

# Parser configurations for Python coverage reports
parsers:
  gcov:
    branch_detection:
      conditional: true
      loop: true
      method: false
      macro: false

  javascript:
    enable_partials: false

# Comment configuration for PR updates
comment:
  layout: "reach, diff, flags, files, footer"
  behavior: default
  require_changes: false
  require_base: false  # Don't require base commit for comparison
  require_head: true
  branches:
    - main
    - develop
    - "feature/*"
    - "fix/*"
  # Improve comment formatting
  show_carryforward_flags: true

# Pull request settings (commented - not supported in current Codecov API)
# pull_request_only_files:
#   - "*.md"
#   - "docs/"
#   - ".github/"

# Notification settings
github_checks:
  annotations: true

fixes:
  - "src/::src/"
  - "tests/::tests/"

# Profiling settings for enterprise features
profiling:
  critical_files_paths:
    - src/core/
    - src/agents/
    - src/config/
