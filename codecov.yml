# codecov.yml
# Purpose: Layered coverage tracking by component, flag (test-type),
#          and patch/file change for PromptCraft-Hybrid.
# Validation: curl --data-binary @codecov.yml https://codecov.io/validate

codecov:
  branch: main                  # Base branch for comparisons
  max_report_age: "12h"         # Ignore uploads older than 12 hours
  notify:
    wait_for_ci: false          # Don't block comment waiting for all CI checks
    after_n_builds: 8           # Wait for all flag uploads: unit(2), integration(2), auth(2), performance(1), stress(1), mutation(1)

# --------------------------------------------------------------------------- #
# Global Coverage Settings                                                    #
# --------------------------------------------------------------------------- #
coverage:
  precision: 2                  # Two-decimal-place display
  round: down
  range: "70...95"              # UI colour scale

  status:
    # -------- Project-level targets (entire repo) -------- #
    project:
      default:                  # Gate every PR on overall coverage
        target: "80%"
        threshold: "5%"         # Allow ±5 percentage-point drift
        branches: [main]

      # Per-flag gates (stricter or looser as appropriate)
      unit:
        target: "85%"
        threshold: "5%"
        flags: ["unit"]
      integration:
        target: "75%"
        threshold: "5%"
        flags: ["integration"]
      performance:
        target: "70%"
        threshold: "5%"
        flags: ["performance"]
      stress:
        target: "65%"
        threshold: "5%"
        flags: ["stress"]
      auth:
        target: "85%"
        threshold: "3%"
        flags: ["auth"]
      mutation:
        target: "50%"
        threshold: "5%"
        flags: ["mutation"]

    # -------- Patch gate (new/changed lines only) -------- #
    patch:
      default:
        target: "85%"           # Compromise between 80% (Opus) and 90% (Gemini)
        threshold: "5%"
        only_pulls: true        # Don't evaluate on main-branch pushes


  # Files or globs to exclude from all denominator calcs
  ignore:
    - "tests/*"                 # Test directory
    - "docs/*"                  # Documentation
    - "scripts/*"               # Build/deployment scripts
    - "examples/*"              # Example code
    - "**/__pycache__/*"        # Python cache files
    - "**/*.egg-info/*"         # Python package metadata
    - ".venv/*"                 # Virtual environment
    - "noxfile.py"              # Nox automation
    - "conftest.py"             # Pytest configuration
    - "*.yaml"                  # YAML config files
    - "*.yml"                   # YAML config files
    - "pyproject.toml"          # Project configuration

# --------------------------------------------------------------------------- #
# Component Mapping (folder → logical subsystem)                              #
# Each component can have its own PR check                                    #
# --------------------------------------------------------------------------- #
component_management:
  individual_components:
    - component_id: core
      name: "Core Engine"
      paths: ["src/core/"]
      flag_regexes: ["unit|integration|performance|stress"]
      statuses:
        - type: project
          target: "80%"
          threshold: "5%"
    - component_id: agents
      name: "Agent System"
      paths: ["src/agents/"]
      flag_regexes: ["unit|performance|stress"]
      statuses:
        - type: project
          target: "80%"
          threshold: "5%"
    - component_id: config
      name: "Configuration"
      paths: ["src/config/"]
      flag_regexes: ["unit"]
      statuses:
        - type: project
          target: "75%"
          threshold: "5%"
    - component_id: utils
      name: "Utilities"
      paths: ["src/utils/"]
      flag_regexes: ["unit|auth"]
      statuses:
        - type: project
          target: "75%"
          threshold: "5%"
    - component_id: ui
      name: "User Interface"
      paths: ["src/ui/"]
      flag_regexes: ["integration"]
      statuses:
        - type: project
          target: "70%"
          threshold: "5%"
    - component_id: mcp_integration
      name: "MCP Integration"
      paths: ["src/mcp_integration/"]
      flag_regexes: ["unit|integration|performance"]
      statuses:
        - type: project
          target: "70%"
          threshold: "5%"
    - component_id: ingestion
      name: "Knowledge Ingestion"
      paths: ["src/ingestion/"]
      flag_regexes: ["unit|integration"]
      statuses:
        - type: project
          target: "70%"
          threshold: "5%"
    - component_id: auth
      name: "Authentication & Security"
      paths: ["src/auth/"]
      flag_regexes: ["auth|unit"]
      statuses:
        - type: project
          target: "85%"
          threshold: "3%"

# --------------------------------------------------------------------------- #
# Flag Definitions (link CI job uploads to logical test suites)               #
# --------------------------------------------------------------------------- #
flags:
  unit:
    paths: ["src/"]
    carryforward: true
  integration:
    paths: ["src/"]
    carryforward: true
  performance:
    paths: ["src/"]
    carryforward: false         # Run less frequently, don't carry forward
  stress:
    paths: ["src/"]
    carryforward: false         # Run less frequently, don't carry forward
  auth:
    paths: ["src/auth/", "src/utils/encryption.py"]
    carryforward: true
  mutation:
    paths: ["src/"]
    carryforward: false         # Expensive, run less frequently

# --------------------------------------------------------------------------- #
# PR Comment Customisation                                                    #
# --------------------------------------------------------------------------- #
comment:
  layout: "reach,diff,flags,components,files"  # Compact yet informative
  require_changes: false                       # Always post, even if no delta
  require_base: true                          # Require base commit for comparison
  require_head: true                          # Require head commit for comparison

# --------------------------------------------------------------------------- #
# GitHub Integration                                                          #
# --------------------------------------------------------------------------- #
github_checks:
  annotations: true             # Enable line-by-line coverage annotations
