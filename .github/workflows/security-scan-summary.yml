name: Security Scan Summary

# This workflow enhances GitHub's native email notifications with detailed security scan information
on:
  workflow_run:
    workflows: ["CodeQL Analysis", "PR Validation", "CI"]
    types: [completed]

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  security-summary:
    if: ${{ github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.event == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR number
        id: pr
        run: |
          # Extract PR number from workflow run
          PR_NUMBER=$(echo '${{ toJSON(github.event.workflow_run.pull_requests) }}' | jq -r '.[0].number // empty')
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Post security scan failure comment
        if: steps.pr.outputs.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ steps.pr.outputs.number }};
            const workflow_name = '${{ github.event.workflow_run.name }}';
            const workflow_url = '${{ github.event.workflow_run.html_url }}';
            const repository = '${{ github.repository }}';

            // Create a detailed comment for the PR
            const comment_body = `## 🚨 Security Gate Blocked This PR

            The **${workflow_name}** security scan has failed and is blocking this PR from being merged.

            ### Required Actions

            1. **Review the failure**: [View workflow run](${workflow_url})
            2. **Fix the issues**: Address the security findings in your code
            3. **Request exception** (if false positive): See the [Security Exception Process](https://github.com/${repository}/blob/main/docs/security/override-process.md)

            ### Common Solutions

            - **CodeQL failures**: Check for SQL injection, XSS, or other security vulnerabilities
            - **Dependency review failures**: Update vulnerable dependencies using \`poetry update\`
            - **Test failures**: Ensure all security-related tests are passing

            ### Need Help?

            - 📚 [Security Gates Guide](https://github.com/${repository}/blob/main/docs/security/security-gates-guide.md)
            - 💬 Contact the security team for assistance
            - 🔍 Check if this is a known false positive in \`.github/security-exceptions.yml\`

            ---
            *This is an automated comment from the security gate enforcement system.*`;

            // Check if we already commented on this workflow failure
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });

            const workflow_run_id = '${{ github.event.workflow_run.id }}';
            const existing_comment = comments.data.find(comment =>
              comment.body.includes('Security Gate Blocked This PR') &&
              comment.body.includes(workflow_url)
            );

            if (!existing_comment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: comment_body
              });

              console.log(`Posted security gate failure comment on PR #${pr_number}`);
            } else {
              console.log(`Security gate comment already exists for this workflow run on PR #${pr_number}`);
            }

      - name: Add security gate label
        if: steps.pr.outputs.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ steps.pr.outputs.number }};

            try {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                labels: ['security-gate-blocked']
              });
              console.log(`Added 'security-gate-blocked' label to PR #${pr_number}`);
            } catch (error) {
              console.log(`Label may already exist or error adding label: ${error.message}`);
            }

  security-passed:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR number
        id: pr
        run: |
          PR_NUMBER=$(echo '${{ toJSON(github.event.workflow_run.pull_requests) }}' | jq -r '.[0].number // empty')
          echo "number=$PR_NUMBER" >> $GITHUB_OUTPUT

      - name: Remove security gate label if all checks pass
        if: steps.pr.outputs.number != ''
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = ${{ steps.pr.outputs.number }};

            // Get all check runs for this PR
            const checkRuns = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/pull/' + pr_number + '/head'
            });

            // Check if all security-related checks have passed
            const securityChecks = ['CodeQL Analysis', 'dependency-review', 'PR Validation'];
            const allSecurityChecksPassed = securityChecks.every(checkName => {
              const check = checkRuns.data.check_runs.find(run => run.name === checkName);
              return check && check.conclusion === 'success';
            });

            if (allSecurityChecksPassed) {
              try {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr_number,
                  name: 'security-gate-blocked'
                });
                console.log(`Removed 'security-gate-blocked' label from PR #${pr_number} - all security checks passed`);
              } catch (error) {
                console.log(`No security-gate-blocked label to remove or error: ${error.message}`);
              }
            }
